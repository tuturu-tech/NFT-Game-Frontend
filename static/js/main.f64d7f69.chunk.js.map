{"version":3,"sources":["assets/twitter-logo.svg","Components/LoadingIndicator/index.js","constants.js","Components/SelectCharacter/index.js","Components/Arena/index.js","App.js","index.js"],"names":["LoadingIndicator","className","CONTRACT_ADDRESS","transformSpellData","spellData","name","imageURI","concentration","toNumber","maxConcentration","attackDamage","SelectSpell","setSpellNFT","useState","spells","setSpells","gameContract","setGameContract","mintingSpell","setMintingSpell","useEffect","window","ethereum","signer","ethers","providers","Web3Provider","getSigner","Contract","myEpicGame","abi","console","log","getSpells","a","getAllDefaultSpells","spellTxn","map","error","onSpellMint","sender","tokenId","spellIndex","checkIfUserHasNFT","spellNFT","on","off","length","spell","index","src","alt","type","onClick","spellId","mintSpellNFT","mintTxn","wait","warn","Arena","boss","setBoss","attackState","setAttackState","showToast","setShowToast","runAttackAction","attackBoss","attackTxn","setTimeout","fetchBoss","getBigBoss","bossTxn","bossData","hp","maxHp","onAttackComplete","newBossHp","newPlayerConcentration","bossHp","playerConcentration","prevState","id","value","max","TWITTER_HANDLE","TWITTER_LINK","App","currentAccount","setCurrentAccount","isLoading","setIsLoading","checkIfWalletIsConnected","request","method","accounts","account","connectWalletAction","alert","fetchNFTMetadata","provider","txn","twitterLogo","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f64d7f69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter-logo.ab177c79.svg\";","import React from 'react';\r\nimport './LoadingIndicator.css';\r\n\r\nconst LoadingIndicator = () => {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","const CONTRACT_ADDRESS = \"0xBE0b32C1336519d8E6b38f8b016dd13A26a4becc\";\r\n\r\nconst transformSpellData = (spellData) => {\r\n  return {\r\n    name: spellData.name,\r\n    imageURI: spellData.imageURI,\r\n    concentration: spellData.concentration.toNumber(),\r\n    maxConcentration: spellData.maxConcentration.toNumber(),\r\n    attackDamage: spellData.attackDamage.toNumber(),\r\n  };\r\n};\r\n\r\nconst transformBossData = (bossData) => {\r\n  return {\r\n    name: bossData.name,\r\n    imageURI: bossData.imageURI,\r\n    hp: bossData.hp.toNumber(),\r\n    maxHp: bossData.maxHp.toNumber(),\r\n    attackDamage: bossData.attackDamage.toNumber(),\r\n  };\r\n};\r\n\r\nexport { CONTRACT_ADDRESS, transformSpellData, transformBossData };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./SelectCharacter.css\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\nimport { ethers } from \"ethers\";\r\nimport { CONTRACT_ADDRESS, transformSpellData } from \"../../constants\";\r\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\r\n\r\nconst SelectSpell = ({ setSpellNFT }) => {\r\n  const [spells, setSpells] = useState([]);\r\n  const [gameContract, setGameContract] = useState(null);\r\n  const [mintingSpell, setMintingSpell] = useState(false);\r\n\r\n  const mintSpellNFTAction = (spellId) => async () => {\r\n    try {\r\n      if (gameContract) {\r\n        setMintingSpell(true);\r\n        console.log(\"Minting spell in progress...\");\r\n        const mintTxn = await gameContract.mintSpellNFT(spellId);\r\n        await mintTxn.wait();\r\n        console.log(\"mintTxn\", mintTxn);\r\n        setMintingSpell(false);\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"MintSpellAction Error:\", error);\r\n      setMintingSpell(false);\r\n    }\r\n  };\r\n\r\n  const renderSpells = () => {\r\n    return spells.map((spell, index) => (\r\n      <div className=\"character-item\" key={spell.name}>\r\n        <div className=\"name-container\">\r\n          <p>{spell.name}</p>\r\n        </div>\r\n        <img\r\n          src={`https://cloudflare-ipfs.com/ipfs/${spell.imageURI}`}\r\n          alt={spell.name}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"character-mint-button\"\r\n          onClick={mintSpellNFTAction(index)}\r\n        >{`Mint ${spell.name}`}</button>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n\r\n    if (ethereum) {\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const gameContract = new ethers.Contract(\r\n        CONTRACT_ADDRESS,\r\n        myEpicGame.abi,\r\n        signer\r\n      );\r\n\r\n      setGameContract(gameContract);\r\n    } else {\r\n      console.log(\"Ethereum object not found\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSpells = async () => {\r\n      try {\r\n        console.log(\"Getting contract spells to mint\");\r\n\r\n        const spellTxn = await gameContract.getAllDefaultSpells();\r\n        console.log(\"spellTxn:\", spellTxn);\r\n\r\n        const spells = spellTxn.map((spellData) => {\r\n          return transformSpellData(spellData);\r\n        });\r\n\r\n        setSpells(spells);\r\n      } catch (error) {\r\n        console.error(\"Something went wrong fetching spells:\", error);\r\n      }\r\n    };\r\n\r\n    const onSpellMint = async (sender, tokenId, spellIndex) => {\r\n      console.log(\r\n        `SpellNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} spellIndex: ${spellIndex.toNumber()}`\r\n      );\r\n\r\n      if (gameContract) {\r\n        const spellNFT = await gameContract.checkIfUserHasNFT();\r\n        console.log(\"SpellNFT: \", spellNFT);\r\n        setSpellNFT(transformSpellData(spellNFT));\r\n      }\r\n    };\r\n\r\n    if (gameContract) {\r\n      getSpells();\r\n\r\n      gameContract.on(\"SpellNFTMinted\", onSpellMint);\r\n    }\r\n\r\n    return () => {\r\n      if (gameContract) {\r\n        gameContract.off(\"SpellNFTMinted\", onSpellMint);\r\n      }\r\n    };\r\n  }, [gameContract]);\r\n\r\n  return (\r\n    <div className=\"select-character-container\">\r\n      <h2>Mint Your Spell. Choose wisely.</h2>\r\n      {spells.length > 0 && (\r\n        <div className=\"character-grid\">{renderSpells()}</div>\r\n      )}\r\n      {mintingSpell && (\r\n        <div className=\"loading\">\r\n          <div className=\"indicator\">\r\n            <LoadingIndicator />\r\n            <p>Minting In Progress...</p>\r\n          </div>\r\n          <img\r\n            src=\"https://media2.giphy.com/media/61tYloUgq1eOk/giphy.gif?cid=ecf05e47dg95zbpabxhmhaksvoy8h526f96k4em0ndvx078s&rid=giphy.gif&ct=g\"\r\n            alt=\"Minting loading indicator\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectSpell;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Arena.css\";\r\nimport { ethers } from \"ethers\";\r\nimport { CONTRACT_ADDRESS, transformBossData } from \"../../constants\";\r\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\n\r\nconst Arena = ({ spellNFT, setSpellNFT }) => {\r\n  const [gameContract, setGameContract] = useState(null);\r\n  const [boss, setBoss] = useState(null);\r\n  const [attackState, setAttackState] = useState(\"\");\r\n  const [showToast, setShowToast] = useState(false);\r\n\r\n  const runAttackAction = async () => {\r\n    try {\r\n      if (gameContract) {\r\n        setAttackState(\"attacking\");\r\n        console.log(\"Attacking boss...\");\r\n        const attackTxn = await gameContract.attackBoss();\r\n        await attackTxn.wait();\r\n        console.log(\"attackTxn:\", attackTxn);\r\n        setAttackState(\"hit\");\r\n\r\n        setShowToast(true);\r\n        setTimeout(() => {\r\n          setShowToast(false);\r\n        }, 5000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error attacking boss:\", error);\r\n      setAttackState(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchBoss = async () => {\r\n      const bossTxn = await gameContract.getBigBoss();\r\n      console.log(\"Boss:\", bossTxn);\r\n      setBoss(transformBossData(bossTxn));\r\n    };\r\n\r\n    const onAttackComplete = (newBossHp, newPlayerConcentration) => {\r\n      const bossHp = newBossHp.toNumber();\r\n      const playerConcentration = newPlayerConcentration.toNumber();\r\n\r\n      console.log(\r\n        `AttackComplete: Boss Hp: ${bossHp} Player Concentration: ${playerConcentration}`\r\n      );\r\n\r\n      setBoss((prevState) => {\r\n        return { ...prevState, hp: bossHp };\r\n      });\r\n\r\n      setSpellNFT((prevState) => {\r\n        return { ...prevState, concentration: playerConcentration };\r\n      });\r\n    };\r\n\r\n    if (gameContract) {\r\n      fetchBoss();\r\n      gameContract.on(\"AttackComplete\", onAttackComplete);\r\n    }\r\n\r\n    return () => {\r\n      if (gameContract) {\r\n        gameContract.off(\"AttackComplete\", onAttackComplete);\r\n      }\r\n    };\r\n  }, [gameContract]);\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n\r\n    if (ethereum) {\r\n      const provider = new ethers.providers.Web3Provider(ethereum);\r\n      const signer = provider.getSigner();\r\n      const gameContract = new ethers.Contract(\r\n        CONTRACT_ADDRESS,\r\n        myEpicGame.abi,\r\n        signer\r\n      );\r\n\r\n      setGameContract(gameContract);\r\n    } else {\r\n      console.log(\"Ethereum object not found\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"arena-container\">\r\n      {boss && (\r\n        <div id=\"toast\" className={showToast ? \"show\" : \"\"}>\r\n          <div id=\"desc\">{`💥 ${boss.name} was hit for ${spellNFT.attackDamage}!`}</div>\r\n        </div>\r\n      )}\r\n      {/* Boss */}\r\n      {boss && (\r\n        <div className=\"boss-container\">\r\n          <div className={`boss-content ${attackState}`}>\r\n            <h2>🔥 {boss.name} 🔥</h2>\r\n            <div className=\"image-content\">\r\n              <img\r\n                src={`https://cloudflare-ipfs.com/ipfs/${boss.imageURI}`}\r\n                alt={`Boss ${boss.name}`}\r\n              />\r\n              <div className=\"health-bar\">\r\n                <progress value={boss.hp} max={boss.maxHp} />\r\n                <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"attack-container\">\r\n            <button className=\"cta-button\" onClick={runAttackAction}>\r\n              {`💥 Attack ${boss.name}`}\r\n            </button>\r\n          </div>\r\n          {attackState === \"attacking\" && (\r\n            <div className=\"loading-indicator\">\r\n              <LoadingIndicator />\r\n              <p>Attacking ⚔️</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Spell NFT */}\r\n      {spellNFT && (\r\n        <div className=\"players-container\">\r\n          <div className=\"player-container\">\r\n            <h2>Your Spell</h2>\r\n            <div className=\"player\">\r\n              <div className=\"image-content\">\r\n                <h2>{spellNFT.name}</h2>\r\n                <img\r\n                  src={`https://cloudflare-ipfs.com/ipfs/${spellNFT.imageURI}`}\r\n                  alt={`Character ${spellNFT.name}`}\r\n                />\r\n                <div className=\"health-bar\">\r\n                  <progress\r\n                    value={spellNFT.concentration}\r\n                    max={spellNFT.maxConcentration}\r\n                  />\r\n                  <p>{`${spellNFT.concentration} / ${spellNFT.maxConcentration} HP`}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"stats\">\r\n                <h4>{`⚔️ Attack Damage: ${spellNFT.attackDamage}`}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arena;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport myEpicGame from \"./utils/MyEpicGame.json\";\r\nimport twitterLogo from \"./assets/twitter-logo.svg\";\r\nimport \"./App.css\";\r\nimport SelectSpell from \"./Components/SelectCharacter\";\r\nimport Arena from \"./Components/Arena\";\r\nimport LoadingIndicator from \"./Components/LoadingIndicator\";\r\nimport { CONTRACT_ADDRESS, transformSpellData } from \"./constants\";\r\nimport { ethers } from \"ethers\";\r\n\r\n// Constants\r\nconst TWITTER_HANDLE = \"TuturuTech\";\r\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\r\n\r\nconst App = () => {\r\n  const [currentAccount, setCurrentAccount] = useState(null);\r\n  const [spellNFT, setSpellNFT] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const checkIfWalletIsConnected = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        console.log(\"Make sure you have MetaMask!\");\r\n        return;\r\n      } else {\r\n        console.log(\"We have the ethereum object\", ethereum);\r\n\r\n        const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n\r\n        if (accounts.length !== 0) {\r\n          const account = accounts[0];\r\n          setCurrentAccount(account);\r\n        } else {\r\n          console.log(\"No authorized account found\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    console.log(currentAccount);\r\n\r\n    if (isLoading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    if (!currentAccount) {\r\n      return (\r\n        <div className=\"connect-wallet-container\">\r\n          <img src=\"https://i.gifer.com/XDZT.gif\" alt=\"Future\" />\r\n          <button\r\n            className=\"cta-button connect-wallet-button\"\r\n            onClick={connectWalletAction}\r\n          >\r\n            Connect Wallet To Get Started\r\n          </button>\r\n        </div>\r\n      );\r\n    } else if (currentAccount && !spellNFT) {\r\n      return <SelectSpell setSpellNFT={setSpellNFT} />;\r\n    } else if (currentAccount && spellNFT) {\r\n      return <Arena spellNFT={spellNFT} setSpellNFT={setSpellNFT} />;\r\n    }\r\n  };\r\n\r\n  const connectWalletAction = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        alert(\"Get MetaMask!\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      console.log(\"Connected\", accounts[0]);\r\n      setCurrentAccount(accounts[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    checkIfWalletIsConnected();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchNFTMetadata = async () => {\r\n      console.log(\"Checking for Spell NFT on address: \", currentAccount);\r\n\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const gameContract = new ethers.Contract(\r\n        CONTRACT_ADDRESS,\r\n        myEpicGame.abi,\r\n        signer\r\n      );\r\n\r\n      const txn = await gameContract.checkIfUserHasNFT();\r\n      if (txn.name) {\r\n        console.log(\"User has spell NFT\");\r\n        setSpellNFT(transformSpellData(txn));\r\n      } else {\r\n        console.log(\"No spell NFT founds\");\r\n      }\r\n\r\n      setIsLoading(false);\r\n    };\r\n\r\n    if (currentAccount) {\r\n      console.log(\"CurrentAccount:\", currentAccount);\r\n      fetchNFTMetadata();\r\n    }\r\n  }, [currentAccount]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"header-container\">\r\n          <p className=\"header gradient-text\">⚔️ Spell Slayer ⚔️</p>\r\n          <p className=\"sub-text\">\r\n            Team up to protect the world from sleeping in pods and eating bugs!\r\n          </p>\r\n          {renderContent()}\r\n        </div>\r\n        <div className=\"footer-container\">\r\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\r\n          <a\r\n            className=\"footer-text\"\r\n            href={TWITTER_LINK}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >{`built by @${TWITTER_HANDLE} with _buildspace`}</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}